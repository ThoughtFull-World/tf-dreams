#!/bin/bash

# Interactive Local Development Setup Script
# This script helps you configure environment variables for local testing

set -e

echo "üåô Dream Journal - Local Development Setup"
echo "=========================================="
echo ""

ENV_FILE="./supabase/functions/.env.local"

# Check if .env.local already exists
if [ -f "$ENV_FILE" ]; then
    echo "‚ö†Ô∏è  .env.local already exists!"
    read -p "Do you want to overwrite it? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Setup cancelled. Using existing .env.local"
        exit 0
    fi
fi

echo "üìù Let's configure your environment variables..."
echo ""
echo "Press Enter to skip optional values."
echo ""

# Supabase (auto for local)
echo "--- Supabase Configuration ---"
echo "‚úì Using local Supabase: http://localhost:54321"
SUPABASE_URL="http://localhost:54321"

# Get local service role key if supabase is running
if command -v supabase &> /dev/null; then
    if supabase status &> /dev/null 2>&1; then
        SUPABASE_KEY=$(supabase status | grep "service_role key" | awk '{print $4}')
        echo "‚úì Auto-detected service role key from running Supabase"
    else
        echo "‚ö†Ô∏è  Local Supabase not running. Start it with: supabase start"
        read -p "Service Role Key (or press Enter to set later): " SUPABASE_KEY
    fi
else
    read -p "Service Role Key (get with 'supabase status'): " SUPABASE_KEY
fi
echo ""

# ElevenLabs
echo "--- ElevenLabs API (Audio Transcription) ---"
echo "Get your key at: https://elevenlabs.io/app/settings/api-keys"
read -p "ElevenLabs API Key: " ELEVENLABS_KEY
echo ""

# Anthropic
echo "--- Anthropic API (Story Generation) ---"
echo "Get your key at: https://console.anthropic.com/settings/keys"
read -p "Anthropic API Key: " ANTHROPIC_KEY
echo ""

# Fal.ai
echo "--- Fal.ai API (Video Generation) ---"
echo "Get your key at: https://fal.ai/dashboard/keys"
read -p "Fal.ai API Key (optional, press Enter to skip): " FAL_KEY
echo ""

# Cloudflare R2
echo "--- Cloudflare R2 (Video Storage) ---"
echo "Get credentials at: https://dash.cloudflare.com ‚Üí R2"
read -p "R2 Account ID (optional): " R2_ACCOUNT_ID
read -p "R2 Access Key ID (optional): " R2_ACCESS_KEY_ID
read -p "R2 Secret Access Key (optional): " R2_SECRET_KEY
read -p "R2 Bucket Name (optional): " R2_BUCKET_NAME
read -p "R2 Public URL (optional): " R2_PUBLIC_URL
echo ""

# Create .env.local file
echo "üíæ Creating .env.local file..."

cat > "$ENV_FILE" << EOF
# Local Development Environment Variables
# Auto-generated by setup-local.sh
# DO NOT commit this file to git!

# Supabase (Local)
SUPABASE_URL=$SUPABASE_URL
SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_KEY:-your-local-service-role-key}

# ElevenLabs API
ELEVENLABS_API_KEY=${ELEVENLABS_KEY:-your_elevenlabs_api_key}

# Anthropic API
ANTHROPIC_API_KEY=${ANTHROPIC_KEY:-your_anthropic_api_key}

# Fal.ai API
FAL_API_KEY=${FAL_KEY:-your_fal_api_key}

# Cloudflare R2
R2_ACCOUNT_ID=${R2_ACCOUNT_ID:-your_r2_account_id}
R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID:-your_r2_access_key_id}
R2_SECRET_ACCESS_KEY=${R2_SECRET_KEY:-your_r2_secret_access_key}
R2_BUCKET_NAME=${R2_BUCKET_NAME:-dream-journal-videos}
R2_PUBLIC_URL=${R2_PUBLIC_URL:-}
EOF

echo "‚úÖ Created $ENV_FILE"
echo ""

# Add to .gitignore if not already there
GITIGNORE="../../.gitignore"
if [ -f "$GITIGNORE" ]; then
    if ! grep -q ".env.local" "$GITIGNORE"; then
        echo "supabase/functions/.env.local" >> "$GITIGNORE"
        echo "‚úÖ Added .env.local to .gitignore"
    else
        echo "‚úì .env.local already in .gitignore"
    fi
fi
echo ""

# Check if Supabase is running
echo "üîç Checking Supabase status..."
if command -v supabase &> /dev/null; then
    if supabase status &> /dev/null 2>&1; then
        echo "‚úÖ Local Supabase is running"
    else
        echo "‚ö†Ô∏è  Local Supabase is not running"
        read -p "Start it now? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            echo "Starting Supabase..."
            supabase start
        fi
    fi
else
    echo "‚ö†Ô∏è  Supabase CLI not found. Install with: npm install -g supabase"
fi
echo ""

# Ask if user wants to start the function now
echo "üöÄ Setup complete!"
echo ""
echo "To start the Edge Function locally, run:"
echo "  cd supabase/functions"
echo "  supabase functions serve process-dream --env-file ./.env.local"
echo ""
read -p "Start the function now? (y/n): " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üéØ Starting Edge Function..."
    echo "Server will be available at: http://localhost:54321/functions/v1/process-dream"
    echo ""
    cd supabase/functions
    supabase functions serve process-dream --env-file ./.env.local
else
    echo ""
    echo "‚ú® You're all set! Start the function when ready."
fi

