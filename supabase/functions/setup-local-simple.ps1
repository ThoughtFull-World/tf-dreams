# Interactive Local Development Setup Script (PowerShell)
# Simple version without emoji characters for better compatibility

Write-Host ""
Write-Host "Dream Journal - Local Development Setup" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

$EnvFile = ".\supabase\functions\.env.local"

# Check if .env.local already exists
if (Test-Path $EnvFile) {
    Write-Host "WARNING: .env.local already exists!" -ForegroundColor Yellow
    $overwrite = Read-Host "Do you want to overwrite it? (y/n)"
    if ($overwrite -ne "y") {
        Write-Host "Setup cancelled. Using existing .env.local" -ForegroundColor Red
        exit 0
    }
}

Write-Host ""
Write-Host "Let's configure your environment variables..." -ForegroundColor Green
Write-Host "Press Enter to skip optional values." -ForegroundColor Gray
Write-Host ""

# Supabase (auto for local)
Write-Host "--- Supabase Configuration ---" -ForegroundColor Yellow
Write-Host "Using local Supabase: http://localhost:54321" -ForegroundColor Green
$SUPABASE_URL = "http://localhost:54321"

# Try to get service role key from supabase status
try {
    $status = supabase status 2>&1 | Out-String
    if ($status -match "service_role key: (.+)") {
        $SUPABASE_KEY = $Matches[1].Trim()
        Write-Host "Auto-detected service role key from running Supabase" -ForegroundColor Green
    } else {
        Write-Host "WARNING: Local Supabase not running. Start it with: supabase start" -ForegroundColor Yellow
        $SUPABASE_KEY = Read-Host "Service Role Key (or press Enter to set later)"
    }
} catch {
    $SUPABASE_KEY = Read-Host "Service Role Key (get with 'supabase status')"
}
Write-Host ""

# ElevenLabs
Write-Host "--- ElevenLabs API (Audio Transcription) ---" -ForegroundColor Yellow
Write-Host "Get your key at: https://elevenlabs.io/app/settings/api-keys" -ForegroundColor Gray
$ELEVENLABS_KEY = Read-Host "ElevenLabs API Key"
Write-Host ""

# Anthropic
Write-Host "--- Anthropic API (Story Generation) ---" -ForegroundColor Yellow
Write-Host "Get your key at: https://console.anthropic.com/settings/keys" -ForegroundColor Gray
$ANTHROPIC_KEY = Read-Host "Anthropic API Key"
Write-Host ""

# Fal.ai
Write-Host "--- Fal.ai API (Video Generation) ---" -ForegroundColor Yellow
Write-Host "Get your key at: https://fal.ai/dashboard/keys" -ForegroundColor Gray
$FAL_KEY = Read-Host "Fal.ai API Key (optional, press Enter to skip)"
Write-Host ""

# Cloudflare R2
Write-Host "--- Cloudflare R2 (Video Storage) ---" -ForegroundColor Yellow
Write-Host "Get credentials at: https://dash.cloudflare.com" -ForegroundColor Gray
$R2_ACCOUNT_ID = Read-Host "R2 Account ID (optional)"
$R2_ACCESS_KEY_ID = Read-Host "R2 Access Key ID (optional)"
$R2_SECRET_KEY = Read-Host "R2 Secret Access Key (optional)"
$R2_BUCKET_NAME = Read-Host "R2 Bucket Name (optional)"
$R2_PUBLIC_URL = Read-Host "R2 Public URL (optional)"
Write-Host ""

# Create .env.local file
Write-Host "Creating .env.local file..." -ForegroundColor Cyan

$envContent = @"
# Local Development Environment Variables
# Auto-generated by setup-local-simple.ps1
# DO NOT commit this file to git!

# Supabase (Local)
SUPABASE_URL=$SUPABASE_URL
SUPABASE_SERVICE_ROLE_KEY=$(if ($SUPABASE_KEY) { $SUPABASE_KEY } else { "your-local-service-role-key" })

# ElevenLabs API
ELEVENLABS_API_KEY=$(if ($ELEVENLABS_KEY) { $ELEVENLABS_KEY } else { "your_elevenlabs_api_key" })

# Anthropic API
ANTHROPIC_API_KEY=$(if ($ANTHROPIC_KEY) { $ANTHROPIC_KEY } else { "your_anthropic_api_key" })

# Fal.ai API
FAL_API_KEY=$(if ($FAL_KEY) { $FAL_KEY } else { "your_fal_api_key" })

# Cloudflare R2
R2_ACCOUNT_ID=$(if ($R2_ACCOUNT_ID) { $R2_ACCOUNT_ID } else { "your_r2_account_id" })
R2_ACCESS_KEY_ID=$(if ($R2_ACCESS_KEY_ID) { $R2_ACCESS_KEY_ID } else { "your_r2_access_key_id" })
R2_SECRET_ACCESS_KEY=$(if ($R2_SECRET_KEY) { $R2_SECRET_KEY } else { "your_r2_secret_access_key" })
R2_BUCKET_NAME=$(if ($R2_BUCKET_NAME) { $R2_BUCKET_NAME } else { "dream-journal-videos" })
R2_PUBLIC_URL=$(if ($R2_PUBLIC_URL) { $R2_PUBLIC_URL } else { "" })
"@

$envContent | Out-File -FilePath $EnvFile -Encoding UTF8
Write-Host "SUCCESS: Created $EnvFile" -ForegroundColor Green
Write-Host ""

# Add to .gitignore if not already there
$GitignoreFile = ".\.gitignore"
if (Test-Path $GitignoreFile) {
    $gitignoreContent = Get-Content $GitignoreFile -Raw
    if ($gitignoreContent -notmatch ".env.local") {
        Add-Content -Path $GitignoreFile -Value "`nsupabase/functions/.env.local"
        Write-Host "Added .env.local to .gitignore" -ForegroundColor Green
    } else {
        Write-Host ".env.local already in .gitignore" -ForegroundColor Gray
    }
}
Write-Host ""

# Check if Supabase is running
Write-Host "Checking Supabase status..." -ForegroundColor Cyan
try {
    $status = supabase status 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "SUCCESS: Local Supabase is running" -ForegroundColor Green
    } else {
        Write-Host "WARNING: Local Supabase is not running" -ForegroundColor Yellow
        $startSupabase = Read-Host "Start it now? (y/n)"
        if ($startSupabase -eq "y") {
            Write-Host "Starting Supabase..." -ForegroundColor Cyan
            supabase start
        }
    }
} catch {
    Write-Host "WARNING: Supabase CLI not found. Install with: npm install -g supabase" -ForegroundColor Yellow
}
Write-Host ""

# Ask if user wants to start the function now
Write-Host "Setup complete!" -ForegroundColor Green
Write-Host ""
Write-Host "To start the Edge Function locally, run:" -ForegroundColor Cyan
Write-Host "  cd supabase\functions" -ForegroundColor Gray
Write-Host "  supabase functions serve process-dream --env-file .\.env.local" -ForegroundColor Gray
Write-Host ""
$startNow = Read-Host "Start the function now? (y/n)"

if ($startNow -eq "y") {
    Write-Host ""
    Write-Host "Starting Edge Function..." -ForegroundColor Cyan
    Write-Host "Server will be available at: http://localhost:54321/functions/v1/process-dream" -ForegroundColor Green
    Write-Host ""
    Set-Location supabase\functions
    supabase functions serve process-dream --env-file .\.env.local
} else {
    Write-Host ""
    Write-Host "All set! Start the function when ready." -ForegroundColor Green
}

